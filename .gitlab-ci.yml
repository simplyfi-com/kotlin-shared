variables:
  GITLAB_NPM_URI: https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm
  GITLAB_NPM_TOKEN: $CI_JOB_TOKEN
  GITLAB_MAVEN_URI: https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/maven
  GITLAB_MAVEN_HEADER: Job-Token
  GITLAB_MAVEN_TOKEN: $CI_JOB_TOKEN

default:
  tags:
    - docker-runner-01
  image: registry.tenderhub.net/devops/docker/openjdk:21
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - publish
  - release

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

publish:npm:
  allow_failure: true
  stage: publish
  script:
    - ./gradlew publishBrowserPackageToGitlabRegistry
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'

publish:browser:
  stage: publish
  script:
    - ./gradlew publishBrowserPublicationToGitlabRepository
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'

publish:android:debug:
  stage: publish
  image: registry.tenderhub.net/devops/docker/android-sdk:latest
  script:
    - ./gradlew publishAndroidDebugPublicationToGitlabRepository
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'

publish:android:release:
  stage: publish
  image: registry.tenderhub.net/devops/docker/android-sdk:latest
  script:
    - ./gradlew publishAndroidReleasePublicationToGitlabRepository
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'

publish:jvm:
  stage: publish
  script:
    - ./gradlew publishJvmPublicationToGitlabRepository
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'

publish:multiplatform:
  stage: publish
  script:
    - ./gradlew publishKotlinMultiplatformPublicationToGitlabRepository
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'

release:prepare:
  stage: release
  image: registry.tenderhub.net/devops/docker/alpine:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" | jq -r .notes > release_notes.md'
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" -X POST "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG"'
  artifacts:
    paths:
      - release_notes.md

release:create:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: "release:prepare"
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - echo "Creating release"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: release_notes.md
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'

name: Publish package to GitHub Packages

on:
  push:
    branches:
      - master
    paths:
      - VERSION

jobs:
  build:
    runs-on: macos-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Publish package
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1
          arguments: publish createSwiftPackage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create files
        run: |
          cp LICENSE sdk/build/swiftpackage
          cp VERSION sdk/build/swiftpackage
          cp sdk/assets/swift-readme.md sdk/build/swiftpackage/README.md
          echo "sdk-ios-*.zip" > sdk/build/swiftpackage/.gitignore
          echo "$GITHUB_REF_NAME" > sdk/build/swiftpackage/VERSION
          mkdir -p sdk/build/swiftpackage/.github/workflows
          cp sdk/assets/workflow.yml sdk/build/swiftpackage/.github/workflows/release.yml
      - name: Push swift package
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: sdk/build/swiftpackage
          destination-github-username: simplyfi-com
          destination-repository-name: swift-shared
      - name: Read VERSION file
        id: getversion
        run: echo "::set-output name=version::$(cat VERSION)"
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: v${{ steps.getversion.outputs.version }}
          prerelease: false
          files: |
            LICENSE